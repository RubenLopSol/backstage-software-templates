# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: python-app
  title: Python flask template
  description: Provisions a minimalistic flask application
spec:
  owner: development
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - component_id
        - environment
      properties:
        component_id:
          title: Component name
          type: string
          description: Unique name of the component (microservice)
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        environment:
          title: Environment
          type: string
          description: Environment where this component will be deploy
          enum:
            - dev
            - prod
            - staging

  # # here's the steps that are executed in series in the scaffolder backend
  # steps:
  #   - id: fetch-base
  #     name: Fetch Base
  #     action: fetch:template
  #     input:
  #       url: ./template
  #       values:
  #         name: ${{ parameters.name }}
  #         owner: ${{ parameters.owner }}

  #   - id: fetch-docs
  #     name: Fetch Docs
  #     action: fetch:plain
  #     input:
  #       targetPath: ./community
  #       url: https://github.com/backstage/community/tree/main/backstage-community-sessions

  #   - id: publish
  #     name: Publish
  #     action: publish:github
  #     input:
  #       allowedHosts: ['github.com']
  #       description: This is ${{ parameters.name }}
  #       repoUrl: ${{ parameters.repoUrl }}
  #       defaultBranch: 'main'

  #   - id: register
  #     name: Register
  #     action: catalog:register
  #     input:
  #       repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
  #       catalogInfoPath: '/catalog-info.yaml'

  # # some outputs which are saved along with the job for use in the frontend
  # output:
  #   links:
  #     - title: Repository
  #       url: ${{ steps['publish'].output.remoteUrl }}
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps['register'].output.entityRef }}