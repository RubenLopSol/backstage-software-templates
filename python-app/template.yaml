# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: python-app
  title: Python flask template
  description: Provisions a minimalistic flask application
spec:
  owner: development
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - component_id
        - environment
      properties:
        component_id:
          title: Component name
          type: string
          description: Unique name of the component (microservice)
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        environment:
          title: Environment
          type: string
          description: Environment where this component will be deploy
          enum:
            - dev
            - prod

  steps:
  # Renderiza la plantilla ubicada en ./template con los valores proporcionados
    - id: fetch-base
      name: Rendering Template
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{parameters.component_id}}
          app_name_lower: ${{ parameters.component_id | lower }}
          app_env: ${{parameters.environment}}
  # Crea un nuevo repositorio en GitHub y sube los archivos generados
    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: github.com?owner=ruben-lopez-sole&repo=${{parameters.component_id}}
        protectDefaultBranch: false
        repoVisibility: public
  # Registra el componente generado en el cat√°logo de Backstage
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}